# Simple Frontend Dockerfile for Solara application
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH="/app" \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    # Solara specific settings
    SOLARA_ASSETS_PROXY=false \
    HOME=/app

# Update system packages and install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* /var/tmp/*

# Install uv for dependency management
RUN pip install uv

# Set work directory
WORKDIR /app

# Copy project files
COPY pyproject.toml ./
COPY uv.lock ./
COPY frontend/ ./frontend/
COPY backend/ ./backend/
COPY __init__.py ./

# Install dependencies and project
RUN uv sync --frozen --no-dev && uv pip install -e .

# Create non-root user
RUN groupadd -r -g 1001 appuser \
    && useradd -r -g appuser -u 1001 -s /bin/false -M -d /app appuser \
    && mkdir -p /app/.solara /app/.cache \
    && chown -R appuser:appuser /app \
    && chmod -R 750 /app

# Clean up
RUN apt-get autoremove -y \
    && apt-get autoclean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Switch to non-root user
USER appuser

# Set PATH to include virtual environment
ENV PATH="/app/.venv/bin:$PATH"

# Expose port
EXPOSE 8765

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8765/ || exit 1

# Default environment variables
ENV BACKEND_URL="http://backend:8000" \
    SOLARA_DEBUG="false"

# Start command
CMD ["solara", "run", "frontend.main", "--host", "0.0.0.0", "--port", "8765"]
