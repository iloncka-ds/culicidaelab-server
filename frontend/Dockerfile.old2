# Frontend Dockerfile for Solara application
# Multi-stage build similar to backend

# Build stage
FROM python:3.11-slim as builder

# Set environment variables for build
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Security: Update system packages and install minimal dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* /var/tmp/*

# Set work directory
WORKDIR /app

# Install uv for faster dependency management
RUN pip install uv

# Copy dependency files
COPY pyproject.toml ./
COPY uv.lock ./

# Copy application code for installation
COPY frontend/ ./frontend/
COPY backend/ ./backend/
COPY __init__.py ./

# Install Python dependencies and the project
RUN uv sync --frozen --no-dev && uv pip install -e .

# Production stage
FROM python:3.11-slim as production

# Security: Set secure environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH="/app" \
    # Solara specific settings
    SOLARA_ASSETS_PROXY=false \
    HOME=/app

# Security: Update system packages and install minimal runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* /var/tmp/* \
    && rm -rf /root/.cache

# Security: Create non-root user with minimal privileges
RUN groupadd -r -g 1001 appuser \
    && useradd -r -g appuser -u 1001 -s /bin/false -M -d /app appuser

# Set work directory
WORKDIR /app

# Copy virtual environment from builder stage
COPY --from=builder /app/.venv /app/.venv

# Copy application code
COPY frontend/ ./frontend/
COPY __init__.py ./

# Security: Create necessary directories with proper permissions
RUN mkdir -p /app/.solara /app/.cache \
    && chown -R appuser:appuser /app \
    && chmod -R 750 /app

# Security: Remove unnecessary packages and clean up
RUN apt-get autoremove -y \
    && apt-get autoclean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Security: Switch to non-root user
USER appuser

# Security: Set working directory with proper ownership
WORKDIR /app

# Expose port
EXPOSE 8765

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8765/ || exit 1

# Default environment variables
ENV BACKEND_URL="http://backend:8000" \
    SOLARA_DEBUG="false"

# Start command
CMD ["solara", "run", "frontend.main:routes", "--host", "0.0.0.0", "--port", "8765"]
