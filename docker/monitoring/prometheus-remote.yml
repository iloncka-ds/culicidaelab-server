# Prometheus configuration for remote monitoring deployment
# Monitors multiple CulicidaeLab instances from a central location

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'culicidaelab-remote-monitor'
    datacenter: 'monitoring-server'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Remote scrape configurations for multiple application instances
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Monitoring server node exporter
  - job_name: 'monitoring-server'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # Production instance monitoring
  - job_name: 'culicidaelab-prod-cadvisor'
    static_configs:
      - targets: ['${PROD_SERVER_IP:-10.0.1.100}:8080']
    scrape_interval: 15s
    metrics_path: /metrics
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

  - job_name: 'culicidaelab-prod-node'
    static_configs:
      - targets: ['${PROD_SERVER_IP:-10.0.1.100}:9100']
    scrape_interval: 30s
    metrics_path: /metrics
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

  - job_name: 'culicidaelab-prod-backend'
    static_configs:
      - targets: ['${PROD_SERVER_IP:-10.0.1.100}:8000']
    scrape_interval: 30s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

  - job_name: 'culicidaelab-prod-nginx'
    static_configs:
      - targets: ['${PROD_SERVER_IP:-10.0.1.100}:9113']
    scrape_interval: 30s
    metrics_path: /metrics
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

  # Staging instance monitoring (if applicable)
  - job_name: 'culicidaelab-staging-cadvisor'
    static_configs:
      - targets: ['${STAGING_SERVER_IP:-10.0.1.101}:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

  - job_name: 'culicidaelab-staging-node'
    static_configs:
      - targets: ['${STAGING_SERVER_IP:-10.0.1.101}:9100']
    scrape_interval: 60s
    metrics_path: /metrics
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

  - job_name: 'culicidaelab-staging-backend'
    static_configs:
      - targets: ['${STAGING_SERVER_IP:-10.0.1.101}:8000']
    scrape_interval: 60s
    metrics_path: /api/metrics
    scrape_timeout: 10s
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

  # Development instance monitoring (optional)
  - job_name: 'culicidaelab-dev-cadvisor'
    static_configs:
      - targets: ['${DEV_SERVER_IP:-10.0.1.102}:8080']
    scrape_interval: 60s
    metrics_path: /metrics
    basic_auth:
      username: ${MONITORING_USER:-monitoring}
      password: ${MONITORING_PASSWORD:-secure_password}

# Remote write configuration for long-term storage (optional)
remote_write:
  - url: "${REMOTE_WRITE_URL}"
    basic_auth:
      username: ${REMOTE_WRITE_USER}
      password: ${REMOTE_WRITE_PASSWORD}
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# Remote read configuration (optional)
remote_read:
  - url: "${REMOTE_READ_URL}"
    basic_auth:
      username: ${REMOTE_READ_USER}
      password: ${REMOTE_READ_PASSWORD}
