# Docker Compose configuration for remote monitoring deployment
# Deploy monitoring stack on a separate server/location

version: '3.8'

services:
  # Prometheus - Metrics collection and alerting (Remote deployment)
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: culicidaelab-prometheus-remote
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus-remote.yml:/etc/prometheus/prometheus.yml:ro
      - ./docker/monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - ./docker/monitoring/recording_rules.yml:/etc/prometheus/recording_rules.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=90d'  # Longer retention for remote monitoring
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.external-url=http://monitoring.culicidaelab.com:9090'
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 2G  # More resources for remote monitoring
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana - Metrics visualization and dashboards (Remote deployment)
  grafana:
    image: grafana/grafana:10.2.0
    container_name: culicidaelab-grafana-remote
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_SERVER_ROOT_URL=http://monitoring.culicidaelab.com:3000/
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_SERVER_DOMAIN=monitoring.culicidaelab.com
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST:-localhost:587}
      - GF_SMTP_USER=${SMTP_USER:-alerts@culicidaelab.com}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${SMTP_FROM:-alerts@culicidaelab.com}
    networks:
      - monitoring
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Alertmanager - Alert routing and notification (Remote deployment)
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: culicidaelab-alertmanager-remote
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./docker/monitoring/alertmanager-remote.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://monitoring.culicidaelab.com:9093'
      - '--cluster.listen-address=0.0.0.0:9094'
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
    environment:
      - SMTP_HOST=${SMTP_HOST:-localhost}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - ALERT_EMAIL=${ALERT_EMAIL:-admin@culicidaelab.com}

  # Node Exporter for monitoring server metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: culicidaelab-node-exporter-monitoring
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  # Nginx reverse proxy for monitoring services
  nginx-monitoring:
    image: nginx:alpine
    container_name: culicidaelab-nginx-monitoring
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/monitoring/nginx-monitoring.conf:/etc/nginx/nginx.conf:ro
      - monitoring_ssl_certs:/etc/ssl/certs:ro
    networks:
      - monitoring
    depends_on:
      - prometheus
      - grafana
      - alertmanager
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

  # Log aggregator for centralized logging
  loki:
    image: grafana/loki:2.9.0
    container_name: culicidaelab-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./docker/monitoring/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Promtail for log collection from remote applications
  promtail:
    image: grafana/promtail:2.9.0
    container_name: culicidaelab-promtail
    restart: unless-stopped
    volumes:
      - ./docker/monitoring/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'

networks:
  monitoring:
    driver: bridge
    name: culicidaelab_monitoring_remote

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  loki_data:
    driver: local
  monitoring_ssl_certs:
    driver: local
